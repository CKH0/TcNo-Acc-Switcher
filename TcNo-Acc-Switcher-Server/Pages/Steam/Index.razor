@page "/Steam/"
@using TcNo_Acc_Switcher_Server.Data
@using TcNo_Acc_Switcher_Server.Shared
@using TcNo_Acc_Switcher_Server.Pages.Steam
@using Microsoft.JSInterop
@using Newtonsoft.Json;
@using Newtonsoft.Json.Linq
@using Gameloop.Vdf
@using Gameloop.Vdf.JsonConverter
@using System.IO
@using System.Security.Cryptography.X509Certificates
@using Microsoft.VisualBasic
@using System.Drawing
@using Microsoft.AspNetCore.WebUtilities
@using TcNo_Acc_Switcher_Server.Pages.General
@inject AppData AppData
@inject IJSRuntime Js
@inject NavigationManager NavManager

@inject Data.Settings.Steam Steam;



<div id="acc_list" class="acc_list">
    @*<AccountDisplay Username="usernamehere" SteamId64="76561198064588130" ImageUrl="https://cdn.cloudflare.steamstatic.com/steamcommunity/public/images/avatars/5c/5ca224cb2707e977b182b95905d84fafe9643779_full.jpg" Line1="usernamehere" Line2="Tyler, The Creator" Line3="10/08/2020 03:07:09" ExtraClasses="" />*@

    @* Will do this ASYNC rather, using JS
            @foreach (var i in SteamSwitcherFuncs.loadProfiles())
        {
            <AccountDisplay Username="@(i.AccName)" SteamId64="@(i.SteamID)" ImageUrl="@(i.ImgURL)" Line1="@(i.AccName)" Line2="@(i.Name)" Line3="@(i.lastLogin)" ExtraClasses="@(i.ExtraClasses)" />

        }*@
    
    <toastarea/>
    <ul class="contextmenu">
        <li><a onclick="SwapTo();return false;" href="">Swap to account</a></li>
        <li>
            <a onclick="event.preventDefault();">Copy Profile...</a>
            <ul class="submenu">
                @*<li><a @onclick="Steam.SteamSwitcherBase.CopyProfileURL" href="">Community URL</a></li>*@
                <li><a onclick="copy('URL', event)" href="">Community URL</a></li>
                <li><a onclick="copy('Line2', event)" href="">Community Username</a></li>
                @*<li><a @onclick="@(e => Steam.SteamSwitcherBase.CopyCommunityUsername("username"))" href="">Community Username</a></li>*@
                <li><a onclick="copy('Username', event)" href="">Login username</a></li>
            </ul>
        </li>
        <li>
            <a onclick="event.preventDefault();">Copy SteamID...</a>
            <ul class="submenu">
                <li><a onclick="copy('SteamId', event)" href="">SteamID [STEAM0:~]</a></li>
                <li><a onclick="copy('SteamId3', event)" href="">SteamID3 [U:1:~]</a></li>
                <li><a onclick="copy('SteamId32', event)" href="">SteamID32</a></li>
                <li><a onclick="copy('SteamId64', event)" href="">SteamID64 7656~</a></li>
            </ul>
        </li>
        <li>
            <a onclick="event.preventDefault();">Copy other...</a>
            <ul class="submenu">
                <li><a onclick="copy('SteamRep', event)" href="">SteamRep</a></li>
                <li><a onclick="copy('SteamID.uk', event)" href="">SteamID.uk</a></li>
                <li><a onclick="copy('SteamID.io', event)" href="">SteamID.io</a></li>
                <li><a onclick="copy('SteamIDFinder.com', event)" href="">SteamIDFinder.com</a></li>
            </ul>
        </li>
        <li><a href="">Create Desktop Shortcut</a></li>
        <li><a onclick="forget(event)">Forget</a></li>
    </ul>
</div>
<div class="acc_list_actionbar">
    <input id="CurrentStatus" @bind="@AppData.CurrentStatus">
    <div>
        <div class="button" id="btnAddNew" onclick="NewSteamLogin()">
            <span>Add New</span>
        </div>
        <div class="button btn_login" id="btnLogin" onclick="SwapTo()">
            <span>Login</span>
        </div>
        @*<div class="button" id="btnSettings" onclick="window.location = 'show_settings';">*@
        <NavLink href="Steam/Settings">
            <div class="button" id="btnSettings">
                <img src="img/icons/ico_settings.svg" draggable="false" />
            </div>
        </NavLink>
        <div class="button" id="btnHelp" onclick="ShowModal('info');">
            <img src="img/icons/ico_question.svg" draggable="false" />
        </div>
    </div>

</div>


@code
{
    // This has to be here for NavManager.
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        AppData.WindowTitle = "TcNo Account Switcher - Steam";
        if (firstRender)
        {
            if (await SteamSwitcherFuncs.LoadProfiles(Js) == false) NavManager.NavigateTo("/?modal=" + Uri.EscapeUriString("find:Steam:Steam.exe:SteamSettings"));
            Steam.SaveSettings(!File.Exists(Steam.SettingsFile)); // Init file if it doesn't exist, or isn't fully initialized (adds missing settings when true)

            //  HANDLE TOAST HERE AS WELL
            var uri = NavManager.ToAbsoluteUri(NavManager.Uri);
            if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("toast_type", out var toastType))
            {
                if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("toast_title", out var toastTitle))
                {
                    if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("toast_message", out var toastMessage))
                    {
                        await GeneralInvocableFuncs.ShowToast(Js, toastType, toastMessage, toastTitle, "toastarea");
                    }
                }
            }
        }
    }
}

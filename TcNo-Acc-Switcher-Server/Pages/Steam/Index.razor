@*TcNo Account Switcher - A Super fast account switcher
    Copyright (C) 2019-2021 TechNobo (Wesley Pyburn)
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <https: //www.gnu.org/licenses />.*@

@page "/Steam/"
@using TcNo_Acc_Switcher_Server.Data
@using TcNo_Acc_Switcher_Server.Shared
@using TcNo_Acc_Switcher_Server.Pages.Steam
@using Microsoft.JSInterop
@using Newtonsoft.Json;
@using Newtonsoft.Json.Linq
@using Gameloop.Vdf
@using Gameloop.Vdf.JsonConverter
@using System.IO
@using System.Security.Cryptography.X509Certificates
@using Microsoft.VisualBasic
@using System.Drawing
@using Microsoft.AspNetCore.WebUtilities
@using TcNo_Acc_Switcher_Server.Pages.General
@inject AppData AppData
@inject IJSRuntime Js
@inject NavigationManager NavManager

@inject Data.Settings.Steam Steam
<style>@(new Data.Settings.Steam().GetSteamIdCssBlock())</style>
@inject AppSettings AppSettings
<style>@(new AppSettings().GetCssBlock())</style>


<div id="acc_list" class="acc_list">
    <toastarea />
    <ul class="contextmenu">
        <li><a onclick="SwapTo(-1, event);">Swap to account</a></li>
        <li>
            <a onclick="event.preventDefault();">Login as...</a>
            <ul class="submenu">
                <li><a onclick="SwapTo(7, event)" href="">Invisible</a></li>
                <li><a onclick="SwapTo(0, event)" href="">Offline</a></li>
                <li><a onclick="SwapTo(1, event)" href="">Online</a></li>
                <li><a onclick="SwapTo(2, event)" href="">Busy</a></li>
                <li><a onclick="SwapTo(3, event)" href="">Away</a></li>
                <li><a onclick="SwapTo(4, event)" href="">Snooze</a></li>
                <li><a onclick="SwapTo(5, event)" href="">Looking to Trade</a></li>
                <li><a onclick="SwapTo(6, event)" href="">Looking to Play</a></li>
            </ul>
        </li>
        <li>
            <a onclick="event.preventDefault();">Copy Profile...</a>
            <ul class="submenu">
                @*<li><a @onclick="Steam.SteamSwitcherBase.CopyProfileURL" href="">Community URL</a></li>*@
                <li><a onclick="copy('URL', event)" href="">Community URL</a></li>
                <li><a onclick="copy('Line2', event)" href="">Community Username</a></li>
                @*<li><a @onclick="@(e => Steam.SteamSwitcherBase.CopyCommunityUsername("username"))" href="">Community Username</a></li>*@
                <li><a onclick="copy('Username', event)" href="">Login username</a></li>
            </ul>
        </li>
        <li>
            <a onclick="event.preventDefault();">Copy SteamID...</a>
            <ul class="submenu">
                <li><a onclick="copy('SteamId', event)" href="">SteamID [STEAM0:~]</a></li>
                <li><a onclick="copy('SteamId3', event)" href="">SteamID3 [U:1:~]</a></li>
                <li><a onclick="copy('SteamId32', event)" href="">SteamID32</a></li>
                <li><a onclick="copy('SteamId64', event)" href="">SteamID64 7656~</a></li>
            </ul>
        </li>
        <li>
            <a onclick="event.preventDefault();">Copy other...</a>
            <ul class="submenu">
                <li><a onclick="copy('SteamRep', event)" href="">SteamRep</a></li>
                <li><a onclick="copy('SteamID.uk', event)" href="">SteamID.uk</a></li>
                <li><a onclick="copy('SteamID.io', event)" href="">SteamID.io</a></li>
                <li><a onclick="copy('SteamIDFinder.com', event)" href="">SteamIDFinder.com</a></li>
            </ul>
        </li>
        <li><a onclick="CreateShortcut()">Create Desktop Shortcut</a></li>
        <li><a onclick="forget(event)">Forget</a></li>
    </ul>
</div>
<div class="acc_list_actionbar">
    <input id="CurrentStatus" @bind="@AppData.CurrentStatus">
    <div>
        <div class="button" id="btnAddNew" onclick="NewSteamLogin()">
            <span>Add New</span>
        </div>
        <div class="button btn_login" id="btnLogin" onclick="SwapTo(-1, event)">
            <span>Login</span>
        </div>
        @*<div class="button" id="btnSettings" onclick="window.location = 'show_settings';">*@
        <NavLink href="Steam/Settings">
            <div class="button" id="btnSettings">
                <img src="img/icons/ico_settings.svg" draggable="false" />
            </div>
        </NavLink>
        <div class="button" id="btnHelp" onclick="ShowModal('info');">
            <img src="img/icons/ico_question.svg" draggable="false" />
        </div>
    </div>

</div>


@code
{
    // This has to be here for NavManager.
    // This is run before everything is painted on, so that it can get the correct values for the CSS Block.
    protected override void OnParametersSet()
    {
        if (!SteamSwitcherFuncs.SteamSettingsValid()) NavManager.NavigateTo("/?modal=" + Uri.EscapeUriString("find:Steam:Steam.exe:SteamSettings"));
        AppSettings.StreamerModeCheck();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        AppData.WindowTitle = "TcNo Account Switcher - Steam";
        if (firstRender)
        {
            if (AppSettings.Instance.StreamerModeEnabled && AppSettings.Instance.StreamerModeTriggered) await Js.InvokeVoidAsync($"window.notification.new", new { type = "info", title = "Streamer mode", message = "Private info is hidden! - See settings", renderTo = "toastarea", duration = 5000 });// Show notification that streamer mode was enabled.
            
            SteamSwitcherFuncs.LoadProfiles(Js);
            Steam.SaveSettings(!File.Exists(Steam.SettingsFile)); // Init file if it doesn't exist, or isn't fully initialized (adds missing settings when true)

            GeneralInvocableFuncs.HandleQueries(NavManager, Js);
        }
    }
}

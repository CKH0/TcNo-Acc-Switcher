@page "/"
@using TcNo_Acc_Switcher.Data
@using Newtonsoft.Json;
@using Newtonsoft.Json.Linq
@using Gameloop.Vdf
@using Gameloop.Vdf.JsonConverter
@using System.IO
@using System.Security.Cryptography.X509Certificates
@using Microsoft.VisualBasic
@using TcNo_Acc_Switcher.Shared
@inject AppData CurAppData


<div id="acc_list" class="acc_list">
    @*<AccountDisplay Username="usernamehere" SteamId64="76561198064588130" ImageUrl="https://cdn.cloudflare.steamstatic.com/steamcommunity/public/images/avatars/5c/5ca224cb2707e977b182b95905d84fafe9643779_full.jpg" Line1="usernamehere" Line2="Tyler, The Creator" Line3="10/08/2020 03:07:09" ExtraClasses="" />
    <AccountDisplay Username="usernamehere1" SteamId64="76561198064588131" ImageUrl="https://cdn.cloudflare.steamstatic.com/steamcommunity/public/images/avatars/5c/5ca224cb2707e977b182b95905d84fafe9643779_full.jpg" Line1="usernamehere1" Line2="Steven, The Creator" Line3="10/08/2020 03:07:09" ExtraClasses="vac" />
    <AccountDisplay Username="usernamehere2" SteamId64="76561198064588132" ImageUrl="https://cdn.cloudflare.steamstatic.com/steamcommunity/public/images/avatars/5c/5ca224cb2707e977b182b95905d84fafe9643779_full.jpg" Line1="usernamehere2" Line2="Kevin, The Creator" Line3="10/08/2020 03:07:09" ExtraClasses="vac" />
    <AccountDisplay Username="usernamehere3" SteamId64="76561198064588133" ImageUrl="https://cdn.cloudflare.steamstatic.com/steamcommunity/public/images/avatars/5c/5ca224cb2707e977b182b95905d84fafe9643779_full.jpg" Line1="usernamehere3" Line2="Jacob, The Creator" Line3="10/08/2020 03:07:09" ExtraClasses="" />
    <AccountDisplay Username="usernamehere4" SteamId64="76561198064588134" ImageUrl="https://cdn.cloudflare.steamstatic.com/steamcommunity/public/images/avatars/5c/5ca224cb2707e977b182b95905d84fafe9643779_full.jpg" Line1="usernamehere4" Line2="Waldo, The Creator" Line3="10/08/2020 03:07:09" ExtraClasses="" />
    <AccountDisplay Username="usernamehere5" SteamId64="76561198064588135" ImageUrl="https://cdn.cloudflare.steamstatic.com/steamcommunity/public/images/avatars/5c/5ca224cb2707e977b182b95905d84fafe9643779_full.jpg" Line1="usernamehere5" Line2="Wesley, The Creator" Line3="10/08/2020 03:07:09" ExtraClasses="" />
    <AccountDisplay Username="usernamehere6" SteamId64="76561198064588136" ImageUrl="https://cdn.cloudflare.steamstatic.com/steamcommunity/public/images/avatars/5c/5ca224cb2707e977b182b95905d84fafe9643779_full.jpg" Line1="usernamehere6" Line2="Mish, The Creator" Line3="10/08/2020 03:07:09" ExtraClasses="" />
    <AccountDisplay Username="usernamehere7" SteamId64="76561198064588137" ImageUrl="https://cdn.cloudflare.steamstatic.com/steamcommunity/public/images/avatars/5c/5ca224cb2707e977b182b95905d84fafe9643779_full.jpg" Line1="usernamehere7" Line2="Bob, The Creator" Line3="10/08/2020 03:07:09" ExtraClasses="" />
    <AccountDisplay Username="usernamehere8" SteamId64="76561198064588138" ImageUrl="https://cdn.cloudflare.steamstatic.com/steamcommunity/public/images/avatars/5c/5ca224cb2707e977b182b95905d84fafe9643779_full.jpg" Line1="usernamehere8" Line2="Kirby, The Creator" Line3="10/08/2020 03:07:09" ExtraClasses="vac" />*@

    @foreach (var i in loadProfiles())
    {
        <AccountDisplay Username="@(i.AccName)" SteamId64="@(i.SteamID)" ImageUrl="https://cdn.cloudflare.steamstatic.com/steamcommunity/public/images/avatars/5c/5ca224cb2707e977b182b95905d84fafe9643779_full.jpg" Line1="@(i.AccName)" Line2="@(i.Name)" Line3="@(i.lastLogin)" ExtraClasses="" />

    }



    <ul class="contextmenu">
        <li>
            <a href="#">Copy Profile...</a>
            <ul class="submenu">
                @*<li><a @onclick="Steam.SteamSwitcherBase.CopyProfileURL" href="">Community URL</a></li>*@
                <li><a onclick="copy('URL')" href="">Community URL</a></li>
                <li><a onclick="copy('Line2')" href="">Community Username</a></li>
                @*<li><a @onclick="@(e => Steam.SteamSwitcherBase.CopyCommunityUsername("username"))" href="">Community Username</a></li>*@
                <li><a onclick="copy('Username')" href="">Login username</a></li>
            </ul>
        </li>
        <li>
            <a href="#">Copy SteamID...</a>
            <ul class="submenu">
                <li><a onclick="copy('SteamId')" href="">SteamID [STEAM0:~]</a></li>
                <li><a onclick="copy('SteamId3')" href="">SteamID3 [U:1:~]</a></li>
                <li><a onclick="copy('SteamId32')" href="">SteamID32</a></li>
                <li><a onclick="copy('SteamId64')" href="">SteamID64 7656~</a></li>
            </ul>
        </li>
        <li>
            <a href="#">Copy other...</a>
            <ul class="submenu">
                <li><a onclick="copy('SteamRep')" href="">SteamRep</a></li>
                <li><a onclick="copy('SteamID.uk')" href="">SteamID.uk</a></li>
                <li><a onclick="copy('SteamID.io')" href="">SteamID.io</a></li>
                <li><a onclick="copy('SteamIDFinder.com')" href="">SteamIDFinder.com</a></li>
            </ul>
        </li>
        <li><a href="#">Create Desktop Shortcut</a></li>
        <li><a href="#">Forget</a></li>
    </ul>
</div>
<div class="acc_list_actionbar">
    <input id="CurrentStatus" @bind="@CurAppData.CurrentStatus">
    <div>
        <div class="button" id="btnAddNew">
            <span>Add New</span>
        </div>
        <div class="button btn_login" id="btnLogin">
            <span>Login</span>
        </div>
        <div class="button" id="btnSettings">
            <img src="img/icons/ico_settings.svg" />
        </div>
        <div class="button" id="btnHelp">
            <img src="img/icons/ico_question.svg" />
        </div>
    </div>

</div>

@code {
    [Inject]
    protected IJSRuntime JsRuntime { get; set; }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
            JsRuntime.InvokeVoidAsync("onBlazorReady");

    }



    public class Steamuser
    {
        [JsonIgnore] public string SteamID { get; set; }
        [JsonProperty("AccountName", Order = 0)] public string AccName { get; set; }
        [JsonProperty("PersonaName", Order = 1)] public string Name { get; set; }
        [JsonProperty("RememberPassword", Order = 2)] private readonly string _remPass = "1"; // Should always be 1
        [JsonProperty("mostrecent", Order = 3)] public string MostRec = "0";
        [JsonProperty("Timestamp", Order = 4)] public string lastLogin { get; set; }
        [JsonProperty("WantsOfflineMode", Order = 5)] public string OfflineMode = "0";

        [JsonIgnore] public string ImgURL { get; set; }
        [JsonIgnore] public string vacStatus { get; set; } // WAS System.Windows.Media.Brush
    }
    public List<Steamuser> loadProfiles()
    {
        Console.WriteLine("LOADING PROFILES!");
        List<Steamuser> _userAccounts = new List<Steamuser>();

        _userAccounts.Clear();
        try
        {
            var loginUsersVToken = VdfConvert.Deserialize(File.ReadAllText("C:\\Program Files (x86)\\Steam\\config\\loginusers.vdf"));
            var loginUsers = new JObject() { loginUsersVToken.ToJson() };

            if (loginUsers["users"] != null)
            {
                foreach (var user in loginUsers["users"])
                {
                    var steamId = user.ToObject<JProperty>()?.Name;
                    if (string.IsNullOrEmpty(steamId) || string.IsNullOrEmpty(user.First?["AccountName"]?.ToString())) continue;
                    _userAccounts.Add(new Steamuser()
                    {
                        Name = user.First?["PersonaName"]?.ToString(),
                        AccName = user.First?["AccountName"]?.ToString(),
                        SteamID = steamId,
                        ImgURL = Path.Combine("images", $"{steamId}.jpg"),
                        lastLogin = user.First?["Timestamp"]?.ToString(),
                        OfflineMode = (!string.IsNullOrEmpty(user.First?["WantsOfflineMode"]?.ToString()) ? user.First?["WantsOfflineMode"]?.ToString() : "0")
                    });
                }
            }
            else
            {
                //MessageBox.Show(Strings.ErrLoadingLoginusers + _persistentSettings.LoginusersVdf());
            }
        }
        catch (FileNotFoundException ex)
        {
            //MessageBox.Show(Strings.ErrLoginusersNonExist, Strings.ErrLoginusersNonExistHeader, MessageBoxButton.OK, MessageBoxImage.Error);
            //MessageBox.Show($"{Strings.ErrInformation} {ex}", Strings.ErrLoginusersNonExistHeader, MessageBoxButton.OK, MessageBoxImage.Error);
            Environment.Exit(2);
        }
        return _userAccounts;
    }



    //[JSInvokable]
    //public static Task<int> CopyProfileURL()
    //{
    //    return Task.FromResult(new Random().Next());
    //}
}


@*<h1>Hello, world!</h1>

        Welcome to your new app.

    <SurveyPrompt Title="How is Blazor working for you?" />
    <span>
        Window title:
    </span>
    <input type="text" @bind="AppData.WindowTitle">

    @code
    {
        //AppData.WindowTitle = "test";

    }*@

@using Microsoft.Extensions.Configuration
@using TcNo_Acc_Switcher_Server.Data
@using TcNo_Acc_Switcher_Server.Pages.General
@using System.Globalization
@inject NavigationManager _navigationManager
@inject Lang  _locale

@if (_cultures != null)
{
	<span>@_locale["Header_ChooseLanguage"]</span>
	<div class="dropdown">
		<ul class="custom-dropdown-menu dropdown-menu">
			@foreach (var (key, value) in _cultures)
			{
				<li class="custom-dropdown-item dropdown-item" @onclick="() => RequestCultureChange(value)">@value - @key</li>
			}
		</ul>
		<button class="dropdown-toggle" type="button" data-toggle="dropdown">
			@_selectedCulture
			<span class="caret"></span>
		</button>
		&nbsp;<a class="fancyLink" @onclick='() => { GeneralInvocableFuncs.OpenLinkInBrowser("https://crowdin.com/project/tcno-account-switcher"); }'>@_locale["Settings_HelpTranslate"]</a>
		&nbsp;<a class="fancyLink" onclick='showModal("crowdin")'>@_locale["Settings_ViewTranslators"]</a>
	</div>
}

@code {
	private readonly string _selectedCulture = Lang.GetCurrentLanguage().Key;
	private Dictionary<string, string> _cultures = Lang.GetAvailableLanguagesDict();

	protected override void OnInitialized()
	{

	}

	private async Task RequestCultureChange(string key)
	{
		if (string.IsNullOrWhiteSpace(key)) return;
	    Lang.LoadLang(key);
	    AppSettings.Rtl = new CultureInfo(Lang.Current).TextInfo.IsRightToLeft;
		await AppData.ReloadPage();
	}
}
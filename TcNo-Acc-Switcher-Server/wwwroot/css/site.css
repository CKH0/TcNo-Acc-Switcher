@import url('open-iconic/font/css/open-iconic-bootstrap.min.css');

html, body {
    font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;
    background-color: var(--mainBackground);
    font-size: 12px; /* THIS SCALES EVERYTHING UP AND DOWN */
}

.mainblock {
    width: 100%;
    height: 100%;
    background-color: var(--mainBackground);
    overflow-y: auto;
    overflow-x: auto;
}

app {
    position: relative;
    display: flex;
    flex-direction: column;
    height: 100vh;
    width: 100vw;
}

img {
    user-select: none;
}

label {
    vertical-align: middle;
    cursor: pointer;
    user-select: none;
}

::selection {
    color: var(--selectionColor);
    background: var(--selectionBackground);
}


/* Based on https://github.com/binaryfunt/electron-seamless-titlebar-tutorial */
.headerbar {
    background-color: var(--headerbarBackground);
    position: relative;
    height: 32px;
    width: 100%;
    -webkit-app-region: drag;
}
    .header_icon {
        height: 10px;
        margin: 12px;
        display: block;
    }
#window-controls {
    display: grid;
    grid-template-columns: repeat(3, 46px);
    position: absolute;
    top: 0;
    right: 0;
    height: 100%;
}
#window-controls-modal {
    display: grid;
    grid-template-columns: repeat(1, 46px);
    position: absolute;
    top: 0;
    right: 0;
    height: 100%;
}

#window-controls .button, #window-controls-modal .button {
    grid-row: 1 / span 1;
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%;
    height: 100%;
}

    .headerbar  #btnMin {
        grid-column: 1;
    }

    .headerbar  #btnMax, #btnRestore{
        grid-column: 2;
    }

    .headerbar  #btnClose {
        grid-column: 3;
    }
    @media (-webkit-device-pixel-ratio: 1.5), (device-pixel-ratio: 1.5), (-webkit-device-pixel-ratio: 2), (device-pixel-ratio: 2), (-webkit-device-pixel-ratio: 3), (device-pixel-ratio: 3) {
        #window-controls .icon {
            width: 10px;
            height: 10px;
        }
    }
    #window-controls {
        -webkit-app-region: no-drag;
    }

    #window-controls .button {
        user-select: none;
    }

        #window-controls .button:hover {
            background: var(--windowControlsBackground-hover);
        }

        #window-controls .button:active {
            background: var(--windowControlsBackground-active);
        }

#btnClose:hover, #btnClose-modal:hover {
    background: var(--windowControlsCloseBackground) !important;
}

#btnClose:active, #btnClose-modal:active {
    background: var(--windowControlsCloseBackground-active) !important;
}

    #btnClose:active .icon, #btnClose-modal:active .icon {
        filter: invert(1);
    }

    #btnRestore {
        display: none !important;
    }
    #titlebar #drag-region {
        display: grid;
        grid-template-columns: auto 138px;
    }
#window-title-modal {
    position: relative;
    background-color: var(--headerbarBackground);
}
#window-title, #window-title-modal {
    color: var(--windowTitleColor);
    grid-column: 1;
    display: flex;
    align-items: center;
    overflow: hidden;
    font-family: "Segoe UI", sans-serif;
    font-size: 12px;
    pointer-events: none
}
    #window-title #window-controls, #window-title-modal #window-controls-modal {
        cursor: pointer;
        pointer-events: all;
    }

    #window-title span, #window-title-modal span {
        position: absolute;
        width: 100%;
        pointer-events: none;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
        line-height: 1.5;
        text-align: center;
    }
    .maximized #titlebar {
        width: 100%;
        padding: 0;
    }

    .maximized #window-title {
        margin-left: 12px;
    }

    .maximized #btnRestore {
        display: flex !important;
    }

    .maximized #btnMax {
        display: none;
    }

.mainWindow {
    height: calc(100% - 32px);
    padding: 0;
    margin: 32px 0 0 0;
    width: 100vw;
}

.content {
    padding-top: 1.1rem;
}

#blazor-error-ui {
    background: lightyellow;
    bottom: 0;
    box-shadow: 0 -1px 2px rgba(0, 0, 0, 0.2);
    display: none;
    left: 0;
    padding: 0.6rem 1.25rem 0.7rem 1.25rem;
    position: fixed;
    width: 100%;
    z-index: 1000;
}

#blazor-error-ui .dismiss {
    cursor: pointer;
    position: absolute;
    right: 0.75rem;
    top: 0.5rem;
}

/* Steam/Settings/Advanced Clearing screen */
div.clearingRow {
    display: flex;
}
div.clearingLeft {
    float: left;
    margin-right: 1%;
    width: 59%;
}
div.clearingRight {
    word-break: break-word;
    overflow: auto;
    background-color: var(--listBackground);
    width: 40%;
    border: solid var(--borderedItemBorderColor) 0.1em
}
div.advancedClearingButtonCol {
    font-size: 0.9rem;
}
    div.advancedClearingButtonCol .buttoncol {
        margin: 0.5em 0 0 0;
    }
#restoreUnderstand{
    margin-bottom: 1em;
}
.clearingPage button {
    margin: 0 !important;
}
.clearingRight #lines {
    max-height: 1px;
}
    .clearingRight #lines p {
        margin: 0;
    }

/* Forgotten Steam account */
.forgottenListActions {
    text-align: end;
}
.forgottenList {
    display: flex;
    margin-bottom: 2em;
}
    .forgottenList select {
        background-color: var(--listBackground);
        border: solid var(--borderedItemBorderColor) 0.1em;
        color: var(--listColor);
        width: 100%;
    }
        .forgottenList select option:checked {
            box-shadow: 0 0 10px 100px var(--checkboxBorder-checked) inset;
            color: var(--defaultTextColor);
        }
        /* 
            Workaround to set color BECAUSE YOU CAN'T SET TEXT COLOR?!
            This is for showing the arrow before, and the SteamID afterwards in a different color
        */
        .forgottenList select option:before {
            content: ">";
            color: var(--listTextColor-before);
            margin-right: 0.5em;
        }
        .forgottenList select option:checked:before {
            color: var(--listTextColor-before-checked);
            margin-left: 0.5em;
        }
        .forgottenList select option:after {
            content: attr(visible-content);
            color: var(--listTextColor-after);
        }
        .forgottenList select option:checked:after {
            content: attr(visible-content);
            color: var(--listTextColor-after-checked);
        }
    .btn_RestoreSelected {
        margin-right: 1em !important;
        padding: 0.25em 3em!important;
    }